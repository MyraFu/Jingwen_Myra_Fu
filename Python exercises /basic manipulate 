{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "bece521b",
   "metadata": {},
   "source": [
    "###### 1a. Data Science Central\n",
    "<a href=\"https://www.datasciencecentral.com/articles/\" >blog link</a>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2bb49515",
   "metadata": {},
   "source": [
    "##### 1b. Data Science Central Blog Logo\n",
    "![](DSC.jpg)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97c869d9",
   "metadata": {},
   "source": [
    "###### 2. Inspiring Quote\n",
    "> *“Things get done only if the data we gather can inform and inspire those in a position to make a difference.” (Dr. Mike Schmoker, Author)*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "eaa8e60a",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f8894fd7220>]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 3. Graph\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as num\n",
    "%matplotlib inline\n",
    "\n",
    "x = [i for i in range(1,1000)]\n",
    "y = [(i)**2 for i in x]\n",
    "\n",
    "fig=plt.figure()\n",
    "plt.plot(x,y)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "777ef4cf",
   "metadata": {},
   "source": [
    "##### 4. Markdown Table\n",
    "| name of the package | number of stars(k) |\n",
    "|---------------------- |-------------------- |\n",
    "| TensorFlow            | 152                 |\n",
    "| Ansible               | 46.6                |\n",
    "| PyTorch               | 45.5                |\n",
    "| Home Assistant        | 39.2                |\n",
    "| pandas                | 28                  |"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5ec68fb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/jwfu/Desktop/Fu_Jingwen MDS/Fu_Jingwen'"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 5. Current Working Directory 1st\n",
    "import os\n",
    "os.getcwd()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "882e5ca5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/jwfu/Desktop/Fu_Jingwen MDS/Fu_Jingwen'"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 5. Current Working Directory 2nd\n",
    "pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "000e92c5",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the answer is 42\n"
     ]
    }
   ],
   "source": [
    "# 6. External Script\n",
    "%run pythonscript.py"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
